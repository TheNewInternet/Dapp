{"version":3,"sources":["pages/navbar/Navbar.js","pages/product/Product.js","pages/market/Order.js","pages/market/Item.js","pages/market/List.js","pages/market/Market.js","pages/home/Home.js","pages/connect/Connect.js","pages/social/Post.js","pages/social/Feed.js","pages/social/Social.js","main.js","index.js","contracts/contractInstance.js","contracts/web3.js","contracts/ipfs.js","api.js"],"names":["Navbar","className","to","Product","Order","add","wallet","useWallet","account","useState","caption","setCaption","image","setImage","isUploaded","setIsUploaded","typeFile","setTypeFile","class","status","type","value","onChange","e","target","includes","src","draggable","controls","autoPlay","alt","id","onClick","accept","files","reader","FileReader","onload","result","readAsDataURL","htmlFor","prevData","v4","Item","itemId","itemAccount","itemCaption","itemImage","deleteItemData","prev","filter","item","List","listData","deleteData","map","Market","date","setDate","Home","Connect","blockNumber","getBlockNumber","balance","networkName","reset","connect","Post","props","state","handleCaptionChange","bind","handlePhotoChange","handleSubmit","event","captureCaption","console","log","captureFile","alert","this","preventDefault","handleOk","onSubmit","name","React","Component","Blog","content","posts","post","getList","a","getPosts","Feed","init","created","Social","Main","path","exact","component","ReactDOM","render","StrictMode","document","getElementById","web3","eth","Contract","anonymous","inputs","outputs","internalType","stateMutability","currentWeb3","Web3","require","window","ethereum","instance","enable","error","currentProvider","ipfs","IPFS","host","port","protocol","buffer","file","readAsArrayBuffer","onloadend","convertToBuffer","_caption","Buffer","from","then","hashedImg","imgHash","hash","bufferDesc","hashedText","textHash","contract","methods","sendHash","send","transactionHash","once","updateAccount","getAccounts","accounts","_account","getCounter","call","counter","hashes","captions","i","push","getHash","Promise","all","postHashes","length","fetch","text","res","postCaptions","key","img"],"mappings":"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","file":"static/js/main.27c72d92.chunk.js","sourcesContent":["import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n  return (\n    <>\n      <nav className=\"navbar-item\">\n        <Link to=\"/\" className=\"navbar-logo\">\n          <div className=\"logo\">\n            <i className=\"fab fa-ethereum\"/>Instachain\n          </div>\n        </Link>\n        <div>\n          <Link to=\"/Social\" className=\"menu-icon\">\n            Social\n          </Link>\n          <Link to=\"/Market\" className=\"menu-icon\">\n            Market\n          </Link>\n        </div>\n        <div className=\"menu-icon \">\n          <Link to=\"/Connect\" className=\"navbar-logo\">\n            <i className=\"fas fa-link \"></i>\n          </Link>\n        </div>\n      </nav>\n    </>\n  );\n};\nexport default Navbar;\n","import \"./Product.css\";\n\nconst Product = () => {\n  return <div className=\"product-index\">product</div>;\n};\n\nexport default Product;\n","import { useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { useWallet } from \"use-wallet\";\n\nimport \"./Order.css\";\n\nconst Order = ({ add }) => {\n  const wallet = useWallet();\n  const account = wallet.account;\n\n  const [caption, setCaption] = useState(\"\");\n  function captionChange(e) {\n    setCaption(e.target.value);\n  }\n\n  const [image, setImage] = useState(\"\");\n  const [isUploaded, setIsUploaded] = useState(false);\n  const [typeFile, setTypeFile] = useState(\"\");\n\n  function imageChange(e) {\n    if (e.target.files && e.target.files[0]) {\n      setTypeFile(e.target.files[0].type);\n      let reader = new FileReader();\n\n      reader.onload = function (e) {\n        setImage(e.target.result);\n        setIsUploaded(true);\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  function addItem() {\n    add(function (prevData) {\n      return [\n        ...prevData,\n        {\n          id: v4(),\n          account,\n          caption,\n          image,\n        },\n      ];\n    });\n  }\n\n  return (\n    <div className=\"order-index\">\n      <div className=\"order-item\">\n      <i class=\"fas fa-user fa-x order-item-title\"/>\n        {wallet.status === \"connected\" ? (\n          <div className=\"order-item-title\">{wallet.account}</div>\n        ) : (\n          <div className=\"order-item-title\"> no connect </div>\n        )}\n      </div>\n      <div className=\"order-item\">\n      <i class=\"fas fa-pen  order-item-title\"/>\n        <input\n          className=\"order-item-input\"\n          type=\"text\"\n          value={caption}\n          onChange={captionChange}\n        />\n      </div>\n      <div className=\"order-item\">\n        <span className=\"order-item-title\"></span>\n        {!isUploaded ? (\n          <>\n            <div className=\"folder\">\n              <input\n                id=\"upload-input\"\n                className=\"order-img-input\"\n                type=\"file\"\n                accept=\".jpg,.jpeg,.gif,.png\"\n                onChange={imageChange}\n              />\n              <label htmlFor=\"upload-input\">\n                <i className=\"fas fa-folder-open fa-10x folder-icon\"></i>\n              </label>\n            </div>\n          </>\n        ) : (\n          <div className=\"preview\">\n            {typeFile.includes(\"video\") ? (\n              <video\n                className=\"preview-img\"\n                src={image}\n                draggable={false}\n                controls\n                autoPlay\n                alt=\"uploaded-img\"\n              />\n            ) : (\n              <img\n                className=\"preview-img\"\n                id=\"uploaded-image\"\n                src={image}\n                draggable={false}\n                alt=\"uploaded-img\"\n              />\n            )}\n            <i\n              className=\"fas fa-trash-alt fa-2x preview-dlt-icon\"\n              onClick={() => {\n                setIsUploaded(false);\n                setImage(null);\n              }}\n            />\n          </div>\n        )}\n      </div>\n\n      <button onClick={addItem} className=\"order-btn\">\n        Order\n      </button>\n    </div>\n  );\n};\nexport default Order;\n","import \"./Item.css\";\n\nconst Item = ({\n  itemId,\n  itemAccount,\n  itemCaption,\n  itemImage,\n  deleteItemData,\n}) => {\n  function deleteItem() {\n    deleteItemData(function (prev) {\n      return prev.filter((item) => item.id !== itemId);\n    });\n  }\n\n  return (\n    <div className=\"item-index\">\n      <div className=\"item-index-item-border\">\n        <div>\n          <div className=\"item-index-item\">{itemAccount}</div>\n          <div className=\"item-index-item\">{itemCaption}</div>\n          <div className=\"item-index-img-border\">\n            <img className=\"item-index-img\" src={itemImage} alt=\"upload-img\" />\n          </div>\n        </div>\n      </div>\n      <button onClick={deleteItem} className=\"item-delete-btn\">\n        <i class=\"fas fa-times item-delete-icon\"></i>\n      </button>\n    </div>\n  );\n};\nexport default Item;\n","import Item from \"./Item\";\nimport \"./List.css\";\n\nconst List = ({ listData, deleteData }) => {\n  return (\n    <div className=\"list-index\">\n      {listData.map((item) => {\n        const { account, caption, image, id } = item;\n        return (\n          <Item\n            key={id}\n            itemId={id}\n            itemAccount={account}\n            itemCaption={caption}\n            itemImage={image}\n            deleteItemData={deleteData}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default List;\n","import Order from \"./Order\";\nimport List from \"./List\";\nimport { useState } from \"react\";\n\nimport \"./Market.css\";\n\nconst Market = () => {\n  const [date, setDate] = useState([]);\n\n  return (\n    <div className=\"market-index\">\n      <Order add={setDate} />\n      <List listData={date} deleteData={setDate} />\n    </div>\n  );\n};\nexport default Market;\n","import \"./Home.css\";\n\nconst Home = () => {\n  return <div className=\"home-index\">Home</div>;\n};\n\nexport default Home;\n","import React from \"react\";\nimport { useWallet } from \"use-wallet\";\n\nimport \"./Connect.css\";\n\nconst Connect = () => {\n  const wallet = useWallet();\n  const blockNumber = wallet.getBlockNumber();\n\n  return (\n    <>\n      <div className=\"connect-index\">\n        <h1>\n          Connect Wallet\n        </h1>\n        {wallet.status === \"connected\" ? (\n          <>\n            <div>\n              <div className=\"connect-index-text\">\n                <div>Account: {wallet.account}</div>\n                <div>Balance: {wallet.balance} WEI</div>\n                <div>Type: {wallet.type}</div>\n                <div>Network: {wallet.networkName}</div>\n                <div>BlockNumber: {blockNumber}</div>\n              </div>\n            </div>\n            <button className=\"cnt-wlt-btn\" onClick={() => wallet.reset()}>\n              Disconnect\n            </button>\n          </>\n        ) : (\n          <div>\n            <div>\n              <div className=\"connect-index-text\">\n                <div>Account: ----------</div>\n                <div>Balance: ---------- WEI</div>\n                <div>Type: ---------</div>\n                <div>Network: ----------</div>\n                <div>BlockNumber: ----------</div>\n              </div>\n            </div>\n            <button className=\"cnt-wlt-btn\" onClick={() => wallet.connect()}>\n              Connect to MetaMask\n            </button>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Connect;\n","import React from \"react\";\nimport \"./Post.css\";\nimport { captureCaption, captureFile, handleOk } from \"../../api\";\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      caption: \"Caption..\",\n    };\n\n    this.handleCaptionChange = this.handleCaptionChange.bind(this);\n    this.handlePhotoChange = this.handlePhotoChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCaptionChange(event) {\n    // this.setState({caption: event.target.value});\n    captureCaption(event.target.value);\n  }\n\n  handlePhotoChange(event) {\n    console.log(event.target.files[0]);\n    // this.setState({photo: event.target.files[0]});\n    captureFile(event.target.files[0]);\n  }\n\n  handleSubmit(event) {\n    alert(\"An caption was submitted: \" + this.state.caption);\n    event.preventDefault();\n    handleOk();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"post-index\">\n        <label className=\"post-item\">\n        <i class=\"fas fa-pen post-item-title\"/>\n          <textarea\n            id=\"caption\"\n            name=\"caption\"\n            className=\"post-textarea\"\n            onChange={this.handleCaptionChange}\n          />\n        </label>\n        <label className=\"post-item\">\n          <div className=\"folder\">\n            <input\n              type=\"file\"\n              id=\"upload-input\"\n              accept=\".jpg,.jpeg,.gif,.png\"\n              //className=\"post-img-input\"\n              onChange={this.handlePhotoChange}\n            />\n            <label htmlFor=\"upload-input\">\n              <i className=\"fas fa-folder-open fa-10x folder-icon\"></i>\n            </label>\n          </div>\n        </label>\n        <input type=\"submit\" value=\"Submit\" className=\"post-submit-btn\" />\n      </form>\n    );\n  }\n}\nexport default Post;\n","import \"./Feed.css\";\nimport { v4 } from \"uuid\";\n\nimport { getPosts, updateAccount } from \"../../api\";\n\nfunction Blog(props) {\n  const content = props.posts.map((post) => (\n    <div className=\"blog-index\">\n      <div key={v4()}>\n        <img src={post.src} alt=\"\" className=\"blog-index-img\" />\n\n        <div className=\"blog-index-img-border\">\n          <div className=\"blog-index-item\">{post.caption}</div>\n        </div>\n      </div>\n    </div>\n  ));\n  return <div>{content}</div>;\n}\n\nlet posts = [];\n\nconst getList = async () => {\n  posts = await getPosts();\n};\ngetList();\n\nconst Feed = () => {\n  return (\n    <div className=\"feed-index\">\n      <Blog posts={posts} />\n    </div>\n  );\n};\n\nexport default Feed;\n","import \"./Social.css\";\n\nimport Post from \"./Post\";\nimport Feed from \"./Feed\";\nimport { created } from \"../../api\";\n// import Create from \"../../api\"\n\nconst init = async () => {\n  created();\n};\ninit();\n\nconst Social = () => {\n  return (\n    <div className=\"social-index\">\n      <Post />\n      <Feed />\n    </div>\n  );\n};\n\nexport default Social;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { UseWalletProvider } from \"use-wallet\";\n\nimport Navbar from \"./pages/navbar/Navbar\";\nimport Product from \"./pages/product/Product\";\nimport Market from \"./pages/market/Market\";\nimport Home from \"./pages/home/Home\";\nimport Connect from \"./pages/connect/Connect\";\nimport Social from \"./pages/social/Social\";\n\nfunction Main() {\n  return (\n    <UseWalletProvider>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/Product\" exact component={Product} />\n          <Route path=\"/Market\" exact component={Market} />\n          <Route path=\"/Social\" exact component={Social} />\n          <Route path=\"/Connect\" exact component={Connect} />\n        </Switch>\n      </Router>\n    </UseWalletProvider>\n  );\n}\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport Main from \"./main\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import web3 from \"./web3\";\n\nconst address = \"0x21D1a24521Bb8bb8cabD4a8FE0B0d6C673F49e38\";\nconst abi = [\n  {\n    anonymous: false,\n    inputs: [],\n    name: \"NewPost\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getHash\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"img\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"text\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_img\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_text\",\n        type: \"string\",\n      },\n    ],\n    name: \"sendHash\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport default new web3.eth.Contract(abi, address);\n","//imports the Web3 API\nvar Web3 = require(\"web3\");\n\n/**\n * creates & exports new instance for\n * Web3 using provided service by Metamask.\n */\nlet currentWeb3;\n\nif (window.ethereum) {\n  let instance = new Web3(window.ethereum);\n  try {\n    // Request account access if needed\n    window.ethereum.enable();\n    // Acccounts now exposed\n    currentWeb3 = instance;\n  } catch (error) {\n    // User denied account access...\n    alert(\"Please allow access for the app to work\");\n  }\n} else if (window.web3) {\n  currentWeb3 = new Web3(Web3.currentProvider);\n  // Acccounts always exposed\n} else {\n  console.log(\n    \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n  );\n}\n\nexport default currentWeb3;\n","//imports the IPFS API\nimport IPFS from \"ipfs-http-client\";\n\n/**\n * creates & exports new instance for\n * IPFS using infura as host, for use.\n */\nconst ipfs = new IPFS({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n});\nexport default ipfs;\n","import web3 from \"./contracts/web3\";\nimport ipfs from \"./contracts/ipfs\";\nimport contract from \"./contracts/contractInstance\";\nlet account = \"\";\nlet buffer = \"\";\nlet caption = \"\";\nlet loading = false;\n\n// data variables\n// const data = ()=>{\n//   return {\n//     buffer: '',\n//     caption: '',\n//   };\n// }\n\n/* used to catch chosen image &\n * convert it to ArrayBuffer.\n */\nconst captureFile = (file) => {\n  const reader = new FileReader();\n  if (typeof file !== \"undefined\") {\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = async () => {\n      buffer = await convertToBuffer(reader.result);\n    };\n  } else buffer = \"\";\n};\n\nconst captureCaption = (_caption) => {\n  caption = _caption;\n};\n\n/**\n * converts ArrayBuffer to\n * Buffer for IPFS upload.\n */\nconst convertToBuffer = async (reader) => {\n  return Buffer.from(reader);\n};\n\n/**\n * submits buffered image & text to IPFS\n * and retrieves the hashes, then store\n * it in the Contract via sendHash().\n */\nconst onSubmit = async () => {\n  alert(\"Uploading on IPFS...\");\n  loading = true;\n  let imgHash;\n\n  ipfs\n    .add(buffer)\n    .then((hashedImg) => {\n      imgHash = hashedImg[0].hash;\n      console.log(imgHash);\n      return convertToBuffer(caption);\n    })\n    .then((bufferDesc) =>\n      ipfs.add(bufferDesc).then((hashedText) => hashedText[0].hash)\n    )\n    .then((textHash) => {\n      contract.methods\n        .sendHash(imgHash, textHash)\n        .send({ from: account }, (error, transactionHash) => {\n          if (typeof transactionHash !== \"undefined\") {\n            alert(\"Storing on Ethereum...\");\n            contract.once(\"NewPost\", { from: account }, () => {\n              getPosts();\n              alert(\"Operation Finished! Refetching...\");\n            });\n          }\n          loading = false;\n        });\n    });\n};\n\n/**\n * validates if image & captions\n * are filled before submission.\n */\nconst handleOk = () => {\n  //   console.log(_file)\n  //   let _buffer = captureFile(_file);\n  //   console.log(!_buffer)\n  if (!buffer || !caption) {\n    alert(\"Please fill in the information.\");\n  } else {\n    onSubmit();\n  }\n};\n\nconst created = async () => {\n  await updateAccount();\n  await getPosts();\n};\n\nconst updateAccount = async () => {\n  const accounts = await web3.eth.getAccounts();\n  const _account = accounts[0];\n  // this.currentAccount = account;\n  account = _account;\n  return _account;\n};\n\nconst getPosts = async () => {\n  loading = false;\n  const posts = [];\n  const counter = await contract.methods.getCounter().call({\n    from: account,\n  });\n\n  console.log(counter);\n\n  if (counter !== null) {\n    const hashes = [];\n    const captions = [];\n    for (let i = counter; i >= 1; i -= 1) {\n      hashes.push(\n        contract.methods.getHash(i).call({\n          from: account,\n        })\n      );\n    }\n\n    const postHashes = await Promise.all(hashes);\n\n    for (let i = 0; i < postHashes.length; i += 1) {\n      captions.push(\n        fetch(`https://gateway.ipfs.io/ipfs/${postHashes[i].text}`).then(\n          (res) => res.text()\n        )\n      );\n    }\n\n    const postCaptions = await Promise.all(captions);\n\n    for (let i = 0; i < postHashes.length; i += 1) {\n      posts.push({\n        id: i,\n        key: `key${i}`,\n        caption: postCaptions[i],\n        src: `https://gateway.ipfs.io/ipfs/${postHashes[i].img}`,\n      });\n    }\n\n    //   this.currentPosts = posts;\n    loading = false;\n  }\n  // console.log(posts)\n  return posts;\n};\n\nexport {\n  getPosts,\n  updateAccount,\n  onSubmit,\n  handleOk,\n  captureFile,\n  captureCaption,\n  created,\n};\n"],"sourceRoot":""}